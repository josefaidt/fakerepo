name: release
on:
  pull_request:
    branches:
      - main
    types:
      - closed
env:
  AWS_REGION: us-east-1
jobs:
  verify-run:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')
    outputs:
      tag: ${{ steps.tag.outputs.result }}
    steps:
      - name: extract-tag-name
        id: tag
        uses: actions/github-script@0.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            return context.payload.pull_request.title.replace(/release\: /, '');
  setup:
    runs-on: ubuntu-latest
    needs: verify-run
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')
    outputs:
      tag: ${{ needs.verify-run.outputs.tag }}
      is-prerelease: ${{ contains(needs.verify-run.outputs.tag, 'next') }}
    env:
      TAG: ${{ needs.verify-run.outputs.tag }}
      IS_PRERELEASE: ${{ contains(needs.verify-run.outputs.tag, 'next') }}
    # permissions for AWS Action to interact with GitHub's OIDC endpoint
    permissions:
      id-token: write
      contents: read
    steps:
      # - uses: actions/checkout@v3
      #   with:
      #     persist-credentials: true
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: ${{ secrets.AWS_ROLE_SESSION_NAME }}
          aws-region: ${{ env.AWS_REGION }}
  prerelease:
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.is-prerelease == true
    environment: next
    steps:
      - uses: ./.github/workflows/release-env.yml
        with:
          env: next
          version: ${{ needs.setup.outputs.tag }}
          is-prerelease: ${{ needs.setup.outputs.is-prerelease }}
  release:
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.is-prerelease == false
    environment: main
    steps:
      - uses: ./.github/workflows/release-env.yml
        with:
          env: main
          version: ${{ needs.setup.outputs.tag }}
          is-prerelease: ${{ needs.setup.outputs.is-prerelease }}
