name: create-release
on:
  workflow_dispatch:
    inputs:
      type:
        type: choice
        description: 'Type of release'
        options: # put in ascending order to not accidentally cut a "major" release PR
          - prerelease
          - patch
          - minor
          - major
        required: true
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: true
      - uses: pnpm/action-setup@v2.2.2
      - name: set git config for pnpm version, git push
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email noreply@github.com
      - name: set-version
        id: version
        run: |
          if [ ${{ github.event.inputs.type }} != prerelease ]
          then
            version=$(pnpm version ${{ github.event.inputs.type }})
          else
            # pnpm version ${{ github.event.inputs.type }} --preid next
            version=$(pnpm version ${{ github.event.inputs.type }} --preid next)
          fi
          echo $(git status)
          echo "VERSION IS $version"
          echo "::set-output name=version::$version"
      - run: $(git status)
      - run: echo "::debug::version is ${{ steps.version.outputs.version }}"
      - run: echo "::notice title="releasing"::${{ steps.version.outputs.version }}"
      - if: ${{ steps.version.outputs.version == '' }}
        run: echo "::error ::Invalid version" && exit 1
      # - uses: actions/setup-node@v3  # is this needed???
      #   with:
      #     node-version-file: '.nvmrc'
      #     cache: 'pnpm'
      # get version
      - id: branch
        run: echo "::set-output name=name::release/${{ steps.version.outputs.version }}"
      - name: Create release branch
        run: git switch -c ${{ steps.branch.outputs.name }}
      - run: echo $(git status)
      # this is not required when pnpm is creating the git tag
      # - name: add and commit changes
      #   run: |
      #     git add package.json
      #     git commit -m '[automated] release ${{ steps.version.outputs.version }}'
      - run: git push origin ${{ steps.branch.outputs.name }}
      - run: 'gh pr create --title "release: ${{ steps.version.outputs.version }}" --body "Automated PR created to release a new version of the project" --label run-ci'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# bumps version with `pnpm version...` (should this create the tag???)
# if pnpm creates the tag, we need to push it to git _before_ running `gh release create...` to mitigate clashing version tags
# or can set this to false https://docs.npmjs.com/cli/v8/commands/npm-version#git-tag-version
